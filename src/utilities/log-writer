#!/bin/bash
# Exports
#	  log_error
#   log_warning
#   log_trace
#   log_message
#

if type log_error &> /dev/null; then
  log_trace 'Already setup log streams'
  return 0
fi

exec 3>&1
trap 'exec 1>&3 3>&-' exit
exec 1> ${TRACE_OUTPUT:-/dev/null}

# Log the message to stderr after marking it as error
log_error () {
  echo "error: $1 :(" | tee -a ${TRACE_OUTPUT:-/dev/null} ${INSTALL_LOG_OUT:-/dev/null} > /dev/stderr
}
export -f log_error

# Log the message to stderr after marking it as message
log_message () {
	echo "message: $1"'!' | tee -a ${TRACE_OUTPUT:-/dev/null} ${INSTALL_LOG_OUT:-/dev/null} > /dev/stderr
}
export -f log_message

# Log the message to TRACE_OUTPUT, or stderr if TRACE_OUTPUT is null
log_trace () {
  echo "trace: $1" | tee -a ${TRACE_OUTPUT:-/dev/stderr} ${INSTALL_LOG_OUT:-/dev/null} > /dev/null
}
export -f log_trace

# Log the message to TRACE_OUTPUT, or stderr if TRACE_OUTPUT is null
log_warning () {
  echo "warning: $1..." | tee -a ${TRACE_OUTPUT:-/dev/stderr} ${INSTALL_LOG_OUT:-/dev/null} > /dev/null
}
export -f log_warning


if [ "$TRACE_OUTPUT" ]; then
  echo '' > $TRACE_OUTPUT
else
  log_warning $'You don\'t have a $TRACE_OUTPUT defined.'
fi

if [ "$INSTALL_LOG_OUT" ]; then
  echo '' > $INSTALL_LOG_OUT
else
  log_warning $'You don\'t have a $INSTALL_LOG_OUT defined.'
fi