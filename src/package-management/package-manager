#!/bin/bash
#
# Exports
#    try_install
#
# Ensures that the distros package manager is installed
# Ensures that additional package manager components are installed
# Ensures that the PACKAGE_MANAGER environment variable is set
# 
requires log-writer
requires homebrew-package-manager

# We have been through this before and don't need to install/update anything
if [ "$PACKAGE_MANAGER" ]; then
    log_trace "$PACKAGE_MANAGER found"
    return 0
fi
    
# Let's first figure out what system we're on and what the package manager is
if which pacman; then
    log_trace $'We\'re on Arch'
    export PACKAGE_MANAGER=pacman
elif which brew  || [[ "$OSTYPE" == "darwin"* ]]; then
    log_trace $'We\'re on a Mac'
    export PACKAGE_MANAGER=homebrew
fi

# Install helpers and make sure everything is up to date
case "$PACKAGE_MANAGER" in
    "pacman")
        if ! which packer; then
            log_trace 'We need to make packer'
            # Make packer
        fi
        pacman -Syy
    ;;
    "homebrew")
        homebrew_init
    ;;
    *)
        log_error $'We couldn\'t find a package manager'
        exit 1
    ;;
esac

log_message "You have $PACKAGE_MANAGER"

# Installs the requested packege if available
# Arguments
#   $1 package-name 
#   $2 additional-package-source TODO: figure out how to handle additional package sources
# Returns
#   return value of *-package-manager
try_install () {

    case "$PACKAGE_MANAGER" in
        "pacman")
            if pacman -Ss $1 | grep "/$1 "; then
                log_trace "Installing $1 from pacman"
                sudo pacman -S $1

            elif packer -Ss $1 | grep "/$1 "; then
                log_trace "Installing $1 from packer"
                packer -S $1

            elif packer -Ss $1 | grep "/$1-git"; then
                log_trace "Installing $1 from packer"
                packer -S "$1-git"
            else
                log_warning "pacman couldn't find $1"
                return 1
            fi 
        ;;
        "homebrew")
            homebrew_install "$1"
        ;;
        *)
            log_error 'We dont know what $PACKAGE_MANAGER you are using!'
            exit 1
        ;;
    esac

    return $?
}
export -f try_install